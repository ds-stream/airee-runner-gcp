FROM ubuntu:20.04

#runner configuration
ENV RUNNER_NAME ""
ENV ORGANIZATION ""
ENV REPO_PROJECT ""
ENV RUNNER_LABELS ""
#ENV REPO_URL https://github.com/${ORGANIZATION}/${REPO_PROJECT}
ENV REPO_URL https://github.com/${ORGANIZATION} 
ENV RUNNER_VERSION 2.302.1
ENV RUNNER_PATH /etc/actions-runner
ENV SERVICE_ACCOUNT github-runner

ENV BINARY_VERSION actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz
ENV URL_BINARY_VERSION https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz

#install necessary tools and docker 
RUN apt update \
    && apt install jq curl apt-transport-https ca-certificates software-properties-common -y \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
    && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" \
    && apt install docker-ce -y

##install gcloud
# RUN apt install apt-transport-https ca-certificates gnupg -y \
#     && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" >> /etc/apt/sources.list.d/google-cloud-sdk.list \
#     && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \
#     && apt update -y && apt install google-cloud-cli -y
RUN apt-get update && \
    apt-get install -y apt-transport-https ca-certificates curl gnupg -y \
    && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    echo xsBNBGKItdQBCADWmKTNZEYWgXy73FvKFY5fRro4tGNa4Be4TZW3wZpct9Cj8EjykU7S9EPoJ3EdKpxFltHRu7QbDi6LWSNA4XxwnudQrYGxnxx6Ru1KBHFxHhLfWsvFcGMwit/znpxtIt9UzqCm2YTEW5NUnzQ4rXYqVQK2FLG4weYJ5bKwkY+ZsnRJpzxdHGJ0pBiqwkMT8bfQdJymUBown+SeuQ2HEqfjVMsIRe0dweD2PHWeWo9fTXsz1Q5abiGckyOVyoN9//DgSvLUocUcZsrWvYPaN+o8lXTO3GYFGNVsx069rxarkeCjOpiQOWrQmywXISQudcusSgmmgfsRZYW7FDBy5MQrABEBAAHNUVJhcHR1cmUgQXV0b21hdGljIFNpZ25pbmcgS2V5IChjbG91ZC1yYXB0dXJlLXNpZ25pbmcta2V5LTIwMjItMDMtMDctMDhfMDFfMDEucHViKcLAYgQTAQgAFgUCYoi11AkQtT3IDRPt7wUCGwMCGQEAAMGoCAB8QBNIIN3Q2D3aahrfkb6axd55zOwR0tnriuJRoPHoNuorOpCv9aWMMvQACNWkxsvJxEF8OUbzhSYjAR534RDigjTetjK2i2wKLz/kJjZbuF4ZXMynCm40eVm1XZqU63U9XR2RxmXppyNpMqQO9LrzGEnNJuh23icaZY6no12axymxcle/+SCmda8oDAfa0iyA2iyg/eU05buZv54MC6RB13QtS+8vOrKDGr7RYp/VYvQzYWm+ck6DvlaVX6VB51BkLl23SQknyZIJBVPm8ttU65EyrrgG1jLLHFXDUqJ/RpNKq+PCzWiyt4uy3AfXK89RczLu3uxiD0CQI0T31u/IzsBNBGKItdQBCADIMMJdRcg0Phv7+CrZz3xRE8Fbz8AN+YCLigQeH0B9lijxkjAFr+thB0IrOu7ruwNY+mvdP6dAewUur+pJaIjEe+4s8JBEFb4BxJfBBPuEbGSxbi4OPEJuwT53TMJMEs7+gIxCCmwioTggTBp6JzDsT/cdBeyWCusCQwDWpqoYCoUWJLrUQ6dOlI7s6p+iIUNIamtyBCwb4izs27HdEpX8gvO9rEdtcb7399HyO3oD4gHgcuFiuZTpvWHdn9WYwPGM6npJNG7crtLnctTR0cP9KutSPNzpySeAniHx8L9ebdD9tNPCWC+OtOcGRrcBeEznkYh1C4kzdP1ORm5upnknABEBAAHCwF8EGAEIABMFAmKItdQJELU9yA0T7e8FAhsMAABJmAgAhRPk/dFj71bU/UTXrkEkZZzE9JzUgan/ttyRrV6QbFZABByf4pYjBj+yLKw3280//JWurKox2uzEq1hdXPedRHICRuh1Fjd00otaQ+wGF3kY74zlWivB6Wp6tnL9STQ1oVYBUv7HhSHoJ5shELyedxxHxurUgFAD+pbFXIiK8cnAHfXTJMcrmPpC+YWEC/DeqIyEcNPkzRhtRSuERXcq1n+KJvMUAKMD/tezwvujzBaaSWapmdnGmtRjjL7IxUeGamVWOwLQbUr+34MwzdeJdcL8fav5LA8Uk0ulyeXdwiAK8FKQsixI+xZvz7HUs8ln4pZwGw/TpvO9cMkHogtgzQ | base64 -d | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
    apt-get update && \
    apt-get install -y google-cloud-sdk

#install terraform
RUN apt install -y gnupg \
    && curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - \
    && apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
    && apt update -y && apt install terraform -y

#install kubectl
RUN apt-get update -y && apt-get upgrade -y && apt-get install kubectl -y

#install gcloud-auth-plugin
RUN apt-get update -y && apt-get upgrade -y && apt-get install google-cloud-sdk-gke-gcloud-auth-plugin -y

#create tech user
RUN adduser --disabled-password --gecos "" ${SERVICE_ACCOUNT}
RUN usermod -aG docker ${SERVICE_ACCOUNT}

#main app directory
RUN mkdir -p ${RUNNER_PATH}
WORKDIR ${RUNNER_PATH}

#extract runner
RUN curl -o ${BINARY_VERSION} -L ${URL_BINARY_VERSION} \
    && tar xzf ${BINARY_VERSION} && rm ${BINARY_VERSION} \
    && chown -R ${SERVICE_ACCOUNT} ${RUNNER_PATH}

#copy files
COPY --chmod=777 ./start.sh .

#configure gcloud-auth-plugin
RUN echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> /home/${SERVICE_ACCOUNT}/.bashrc

#install runner dependencies
RUN ${RUNNER_PATH}/bin/installdependencies.sh

#connect runner to repository and launch app
USER ${SERVICE_ACCOUNT}
ENTRYPOINT ./start.sh
